-- Data Exploratory Analysis

-- ========================================
-- 1. Data Exploration: General Information
-- ========================================

-- 1.1. Explore all distinct states of the customers
SELECT DISTINCT State 
FROM stores_sales_forecasting;

-- 1.2. Explore all categories and sub-categories in the dataset
SELECT DISTINCT Category, Sub_Category, Product_Name 
FROM stores_sales_forecasting
ORDER BY Category, Sub_Category, Product_Name;

-- 1.3. Find the date of the first and last order
SELECT 
    MIN(order_date) AS first_order_date,
    MAX(order_date) AS last_order_date
FROM stores_sales_forecasting;

-- 1.4. Find the Total Sales
SELECT SUM(sales) AS total_sales 
FROM stores_sales_forecasting;

-- 1.5. Find how many items are sold
SELECT COUNT(sales) AS sales_count 
FROM stores_sales_forecasting;

-- 1.6. Find the total number of orders
SELECT 
    COUNT(order_id) AS total_orders,
    COUNT(DISTINCT order_id) AS distinct_total_orders
FROM stores_sales_forecasting;

-- 1.7. Find the total number of products
SELECT 
    COUNT(product_name) AS count_product_name,
    COUNT(product_id) AS count_product_id,
    COUNT(DISTINCT product_id) AS count_distinct_id
FROM stores_sales_forecasting;

-- 1.8. Find the total number of customers
SELECT 
    COUNT(customer_id) AS count_customer_id,
    COUNT(customer_name) AS count_customer_name
FROM stores_sales_forecasting;

-- 1.9. Find the total number of customers who have placed an order
SELECT COUNT(DISTINCT customer_id) 
FROM stores_sales_forecasting;

-- ========================================
-- 2. Business Metrics Report
-- ========================================

-- 2.1. Generate a report with key business metrics
SELECT 'Total Sales' as measure_name, ROUND(SUM(sales), 2) AS measure_value 
FROM stores_sales_forecasting
UNION ALL
SELECT 'Total Quantity' as measure_name, SUM(quantity) AS measure_value 
FROM stores_sales_forecasting
UNION ALL
SELECT 'Total Nr. Orders', COUNT(DISTINCT order_id) 
FROM stores_sales_forecasting
UNION ALL
SELECT 'Total Nr. Products', COUNT(product_name) 
FROM stores_sales_forecasting
UNION ALL
SELECT 'Total Nr. Customers', COUNT(customer_id) 
FROM stores_sales_forecasting;

-- ========================================
-- 3. Sales and Customer Analysis
-- ========================================

-- 3.1. Find total customers by states
SELECT 
    state,
    COUNT(customer_id) AS total_customers
FROM stores_sales_forecasting
GROUP BY state
ORDER BY total_customers DESC;

-- 3.2. Find total products by categories (Sub-category)
SELECT
    Sub_category,
    COUNT(product_id) AS total_products
FROM stores_sales_forecasting
GROUP BY sub_category
ORDER BY total_products DESC;

-- 3.3. What is the total profit for each category?
SELECT 
    Sub_category,
    ROUND(SUM(Profit), 2) AS total_profit
FROM stores_sales_forecasting
GROUP BY Sub_category
ORDER BY total_profit DESC;

-- 3.4. What is the total profit generated by each customer?
SELECT 
    Customer_id,
    Customer_name,
    ROUND(SUM(Profit), 2) AS total_profit
FROM stores_sales_forecasting
GROUP BY Customer_id, Customer_name
ORDER BY total_profit DESC;

-- 3.5. What is the distribution of sold items across states?
SELECT 
    State,
    SUM(quantity) AS total_sold_items
FROM stores_sales_forecasting
GROUP BY State
ORDER BY total_sold_items DESC;

-- ========================================
-- 4. Top Performing Products and Sub-categories
-- ========================================

-- 4.1. Which 5 products generate the highest revenue (by quantity sold)?
SELECT 
    Product_name,
    SUM(quantity) AS total_sold_items
FROM stores_sales_forecasting
GROUP BY Product_name
ORDER BY total_sold_items DESC
LIMIT 5;

-- 4.2. What are the 5 worst-performing products in terms of sales?
SELECT 
    Product_name,
    SUM(quantity) AS total_sold_items
FROM stores_sales_forecasting
GROUP BY Product_name
ORDER BY total_sold_items ASC
LIMIT 5;

-- 4.3. Which subcategories generate the highest revenue (by quantity sold)?
SELECT 
    Sub_category,
    SUM(quantity) AS total_sold_items
FROM stores_sales_forecasting
GROUP BY Sub_category
ORDER BY total_sold_items DESC
LIMIT 5;

-- 4.4. What are the 5 worst-performing sub-categories in terms of sales?
SELECT 
    Sub_category,
    SUM(quantity) AS total_sold_items
FROM stores_sales_forecasting
GROUP BY Sub_category
ORDER BY total_sold_items ASC;

-- ========================================
-- 5. Top Performing Customers
-- ========================================

-- 5.1. Find the top 10 customers who have generated the highest profit
SELECT 
    customer_id,
    customer_name,
    ROUND(SUM(Profit), 2) AS total_profit
FROM stores_sales_forecasting
GROUP BY customer_id, customer_name
ORDER BY total_profit DESC
LIMIT 10;

-- 5.2. Find the top 10 customers with the fewest orders placed
SELECT 
    customer_id,
    customer_name,
    COUNT(DISTINCT order_id) AS total_orders
FROM stores_sales_forecasting
GROUP BY customer_id, customer_name
ORDER BY total_orders ASC
LIMIT 10;